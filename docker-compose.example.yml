version: '3.9'
services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DATABASE=postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    restart: on-failure
    volumes:
      - ./api/uploads:/app/uploads

  api:
    image: ghcr.io/renzynx/bliss:latest
    container_name: api
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgrespw@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
      # should be your frontend domain
      # e.g. https://amog-us.club
      - CORS_ORIGIN=
      # just smash random keys on your keyboard or use a password generator
      - SESSION_SECRET=123
      # set to "true" if you want to use email verification
      - USE_MAIL=false
      - MAIL_HOST=
      - MAIL_PORT=
      - MAIL_USERNAME=
      - MAIL_PASSWORD=
      # e.g. ServiceName <noreply@domain.com>
      - MAIL_FROM=
      # should be local or s3, s3 doesn't work yet
      - UPLOADER=local
      # set to "true" if you are going to use a reverse proxy
      - USE_PROXY=false
      # set to "true" if you are going to use SSL
      - USE_SSL=false
      # port for the container to listen on
      - PORT=3000
    ports:
      # ðŸ‘‡ Change this to whatever port you want
      - 8080:3000
    depends_on:
      - postgres
      - redis

  web:
    image: ghcr.io/renzynx/web:latest
    container_name: web
    restart: always
    ports:
      # ðŸ‘‡ Change this to whatever port you want
      - 8500:5000
    environment:
      # should be your backend domain e.g. https://uploads.amog-us.club
      - NEXT_PUBLIC_API_URL=
